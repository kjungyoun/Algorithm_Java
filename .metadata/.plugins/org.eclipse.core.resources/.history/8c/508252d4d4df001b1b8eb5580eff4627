import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.LinkedList;

public class Main_G4_6137_문자열생성 {
	static LinkedList<Character> list;
	public static void main(String[] args)throws Exception {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(in.readLine());
		char T[] = new char[N];
		
		list = new LinkedList<Character>();
		
		// 입력을 받음
		for (int i = 0; i < N; i++) {
			list.add(in.readLine().charAt(0));
		}
		
		
		for (int i = 0; i<N; i++) {
			int size = list.size();
			
			boolean result = find(0,size-1);
			
			if(result) {
				T[i] = list.pollFirst();
			}else {
				T[i] = list.pollLast();
			}
			
//			if(first < last) { // 맨 앞이 더 앞에있는 단어일 때
//				T[i] = list.pollFirst();
//			}
//			else if(first > last) { // 맨 뒤가 더 앞에있는 단어일 때
//				T[i] = list.pollLast();
//			}
//			else { // 서로 같은 단어일 때
//				char nextF = list.get(1); // 첫번째 문자 다음 문자
//				char beforeL = list.get(size-2); // 마지막 문자 이전 문자
//			}
		}
		
		
	}
	
	public static boolean find(int firstIdx, int lastIdx) {
		char first = list.get(firstIdx);
		char last = list.get(lastIdx);
		
		if(first < last)
			return true;
		else if(first > last)
			return false;
		else {
			return find(firstIdx+1, lastIdx-1);
		}
	}

}
