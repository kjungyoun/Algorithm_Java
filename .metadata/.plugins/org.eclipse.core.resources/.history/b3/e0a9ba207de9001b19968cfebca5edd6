import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main_G4_1197_최소스패닝트리_Kruskal {
	
	static int parent[], V, E;
	static Edge edgeList[];
	
	static class Edge implements Comparable<Edge>{
		
		int to,from,weights;

		public Edge(int from, int to, int weights) {
			super();
			this.from = from;
			this.to = to;
			this.weights = weights;
		}



		@Override
		public int compareTo(Edge o) {
			// 가중치 기준으로 오름차순 정렬
			return Integer.compare(this.weights, o.weights);
		}
		
	}
	
	public static void make() {
		// 서로소 집합 초기화 과정
		for (int i = 0; i < V; i++) {
			parent[i] = i;
		}
	}
	
	public static void main(String[] args)throws Exception {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(in.readLine());
		
		V = Integer.parseInt(st.nextToken());
		E = Integer.parseInt(st.nextToken());
		
		parent = new int[V];
		make();
		edgeList = new Edge[E];
		
		for (int i = 0; i < E ; i++) {
			st = new StringTokenizer(in.readLine());
			int to = Integer.parseInt(st.nextToken());
			int from = Integer.parseInt(st.nextToken());
			int weights = Integer.parseInt(st.nextToken());
			edgeList[i] = new Edge(from,to, weights);
		}
		
	}

}
